<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.github.vindell</groupId>
	<artifactId>Karaf-OSGI-Learning</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>Karaf-OSGI-Learning</name>
	
	<modules>
		<module>Karaf-camel-osgi1</module>
		<module>Karaf-camel-osgi2</module>
		<module>Karaf-camel-osgi3</module>
		<module>Karaf-camel-osgi4</module>
		<module>Karaf-camel-osgi5</module>
		<module>Karaf-camel-osgi6</module>
		<module>Karaf-camel-osgi7</module>
		<module>Karaf-helloworld</module>
		<module>Karaf-kar</module>
		<module>Karaf-shell-command</module>
	</modules>
	
	<properties>
		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<activiti-osgi.version>6.0.0</activiti-osgi.version>
		<activemq-osgi.version>5.15.3</activemq-osgi.version>
		<akka-osgi.version>2.5.12</akka-osgi.version>
		<axis2-osgi.version>1.7.8</axis2-osgi.version>
		<camel-osgi.version>2.22.1</camel-osgi.version>
		<camel-spring-dm.version>2.19.5</camel-spring-dm.version>
		<collectd-osgi.version>1.0.1</collectd-osgi.version>
		<cxf.version>3.2.6</cxf.version>
		<drools-osgi.version>7.0.0.Beta1</drools-osgi.version>
		<felix.version>6.0.1</felix.version>
		<guava-osgi.version>11.0.1</guava-osgi.version>
		<h2spatial-osgi.version>1.2.4</h2spatial-osgi.version>
		<hibernate-osgi.version>5.3.7.Final</hibernate-osgi.version>
		<httpclient-osgi.version>4.5.6</httpclient-osgi.version>
		<httpasyncclient-osgi.version>4.1.4</httpasyncclient-osgi.version>
		<httpcore-osgi.version>4.4.10</httpcore-osgi.version>
		<infinispan-osgi.version>9.4.0.Final</infinispan-osgi.version>
		<java.version>1.8</java.version>
		<jena-osgi.version>3.9.0</jena-osgi.version>
		<jeromq-osgi.version>0.2.0</jeromq-osgi.version>
		<junit.version>4.12</junit.version>
		<junit-osgi.version>1.2.10</junit-osgi.version>
		<liquibase-osgi.version>3.4.2</liquibase-osgi.version>
		<openwebbeans-osgi.version>2.0.7</openwebbeans-osgi.version>
		<osgi-annotation.version>7.0.0</osgi-annotation.version>
		<osgi-core.version>7.0.0</osgi-core.version>
		<osgi-cmpn.version>7.0.0</osgi-cmpn.version>
		<osgi-promise.version>7.0.0</osgi-promise.version>
		<refit-osgi.version>1.8.0</refit-osgi.version>
		<rxtx-osgi.version>2.2-pre2</rxtx-osgi.version>
		<servlet-api.version>2.5</servlet-api.version>
		<slf4j.version>1.7.25</slf4j.version>
		<spring-osgi.version>1.2.1</spring-osgi.version>
		<transactions-osgi.version>4.0.6</transactions-osgi.version>
		<wink-osgi.version>1.4</wink-osgi.version>
		
		<!-- Maven Plugin versions -->
		<maven-appassembler-plugin.version>2.0.0</maven-appassembler-plugin.version>
		<maven-checkstyle-plugin.version>3.0.0</maven-checkstyle-plugin.version>
		<maven-codenarc-plugin.version>0.22-1</maven-codenarc-plugin.version>
		<maven-cobertura-plugin.version>2.7</maven-cobertura-plugin.version>
		<maven-compiler-plugin.version>3.8.0</maven-compiler-plugin.version>
		<maven-bundle-plugin.version>4.0.0</maven-bundle-plugin.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-dependency-check-plugin.version>3.3.0</maven-dependency-check-plugin.version>
		<maven-enforcer-plugin.version>3.0.0-M2</maven-enforcer-plugin.version>
		<maven-findbugs-plugin.version>3.0.5</maven-findbugs-plugin.version>
		<maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>
		<maven-gwt-plugin.version>2.8.2</maven-gwt-plugin.version>
		<maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
		<maven-jar-plugin.version>3.1.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>
		<maven-karaf-plugin.version>4.2.1</maven-karaf-plugin.version>
		<maven-license-plugin.version>1.14</maven-license-plugin.version>
		<maven-nexus-staging-plugin.version>1.6.8</maven-nexus-staging-plugin.version>
 		<maven-pmd-plugin.version>3.9.0</maven-pmd-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.22.1</maven-surefire-plugin.version>
		<maven-war-plugin.version>3.2.2</maven-war-plugin.version>
		
	</properties>
	
	<dependencyManagement>
		<dependencies>
			
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.activiti/activiti-osgi -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-osgi</artifactId>
				<version>${activiti-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.activiti/activiti-camel -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-camel</artifactId>
				<version>${activiti-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.activemq/activemq-osgi -->
			<dependency>
			    <groupId>org.apache.activemq</groupId>
			    <artifactId>activemq-osgi</artifactId>
			    <version>${activemq-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.typesafe.akka/akka-osgi -->
			<dependency>
			    <groupId>com.typesafe.akka</groupId>
			    <artifactId>akka-osgi_2.12</artifactId>
			    <version>${akka-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.axis2/org.apache.axis2.osgi -->
			<dependency>
			    <groupId>org.apache.axis2</groupId>
			    <artifactId>org.apache.axis2.osgi</artifactId>
			    <version>${axis2-osgi.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.camel/camel-core-osgi -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-core-osgi</artifactId>
				<version>${camel-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.camel/camel-spring-dm -->
			<dependency>
				<groupId>org.apache.camel</groupId>
				<artifactId>camel-spring-dm</artifactId>
				<version>${camel-spring-dm.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/hu.blackbelt/collectd-osgi -->
			<dependency>
			    <groupId>hu.blackbelt</groupId>
			    <artifactId>collectd-osgi</artifactId>
			    <version>${collectd-osgi.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-rt-frontend-jaxrs -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-rt-frontend-jaxws -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.drools/drools-osgi-integration -->
			<dependency>
			    <groupId>org.drools</groupId>
			    <artifactId>drools-osgi-integration</artifactId>
			    <version>${drools-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.framework -->
			<dependency>
			    <groupId>org.apache.felix</groupId>
			    <artifactId>org.apache.felix.framework</artifactId>
			    <version>${felix.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.main -->
			<dependency>
			    <groupId>org.apache.felix</groupId>
			    <artifactId>org.apache.felix.main</artifactId>
			    <version>${felix.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.scr -->
			<dependency>
			    <groupId>org.apache.felix</groupId>
			    <artifactId>org.apache.felix.scr</artifactId>
			    <version>2.1.12</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.felix/org.apache.felix.configadmin -->
			<dependency>
			    <groupId>org.apache.felix</groupId>
			    <artifactId>org.apache.felix.configadmin</artifactId>
			    <version>1.8.16</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/com.googlecode.guava-osgi/guava-osgi -->
			<dependency>
			    <groupId>com.googlecode.guava-osgi</groupId>
			    <artifactId>guava-osgi</artifactId>
			    <version>${guava-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.orbisgis/h2spatial-osgi -->
			<dependency>
			    <groupId>org.orbisgis</groupId>
			    <artifactId>h2spatial-osgi</artifactId>
			    <version>${h2spatial-osgi.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-osgi -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-osgi</artifactId>
				<version>${hibernate-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient-osgi -->
			<dependency>
			    <groupId>org.apache.httpcomponents</groupId>
			    <artifactId>httpclient-osgi</artifactId>
			    <version>${httpclient-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpasyncclient-osgi -->
			<dependency>
			    <groupId>org.apache.httpcomponents</groupId>
			    <artifactId>httpasyncclient-osgi</artifactId>
			    <version>${httpasyncclient-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpcore-osgi -->
			<dependency>
			    <groupId>org.apache.httpcomponents</groupId>
			    <artifactId>httpcore-osgi</artifactId>
			    <version>${httpcore-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.infinispan/infinispan-osgi -->
			<dependency>
			    <groupId>org.infinispan</groupId>
			    <artifactId>infinispan-osgi</artifactId>
			    <version>${infinispan-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.jena/jena-osgi -->
			<dependency>
			    <groupId>org.apache.jena</groupId>
			    <artifactId>jena-osgi</artifactId>
			    <version>${jena-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.hmsonline.bundle/jeromq -->
			<dependency>
			    <groupId>com.hmsonline.bundle</groupId>
			    <artifactId>jeromq</artifactId>
			    <version>${jeromq-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/junit/junit -->
			<dependency>
			    <groupId>junit</groupId>
			    <artifactId>junit</artifactId>
			    <version>${junit.version}</version>
			    <scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.github.nfalco79/junit4osgi-bundle -->
			<dependency>
			    <groupId>com.github.nfalco79</groupId>
			    <artifactId>junit4osgi-bundle</artifactId>
			    <version>${junit-osgi.version}</version>
			    <scope>test</scope>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.liquibase/liquibase-osgi -->
			<dependency>
			    <groupId>org.liquibase</groupId>
			    <artifactId>liquibase-osgi</artifactId>
			    <version>${liquibase-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api-osgi -->
			<dependency>
			    <groupId>javax.xml.bind</groupId>
			    <artifactId>jaxb-api-osgi</artifactId>
			    <version>2.2.7</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.openwebbeans/openwebbeans-osgi -->
			<dependency>
			    <groupId>org.apache.openwebbeans</groupId>
			    <artifactId>openwebbeans-osgi</artifactId>
			    <version>${openwebbeans-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.osgi/osgi.annotation -->
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>osgi.annotation</artifactId>
			    <version>${osgi-annotation.version}</version>
			    <scope>provided</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.osgi/osgi.core -->
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>osgi.core</artifactId>
			    <version>${osgi-core.version}</version>
			    <scope>provided</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.osgi/osgi.cmpn -->
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>osgi.cmpn</artifactId>
			    <version>${osgi-cmpn.version}</version>
			    <scope>provided</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.osgi/osgi.promise -->
			<dependency>
			    <groupId>org.osgi</groupId>
			    <artifactId>osgi.promise</artifactId>
			    <version>${osgi-promise.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.googlecode.refit/refit-osgi -->
			<dependency>
			    <groupId>com.googlecode.refit</groupId>
			    <artifactId>refit-osgi</artifactId>
			    <version>${refit-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.rxtx/rxtx-osgi -->
			<dependency>
			    <groupId>org.rxtx</groupId>
			    <artifactId>rxtx-osgi</artifactId>
			    <version>${rxtx-osgi.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.slf4j/osgi-over-slf4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>osgi-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-simple -->
			<dependency>
			    <groupId>org.slf4j</groupId>
			    <artifactId>slf4j-simple</artifactId>
			    <version>${slf4j.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-core -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-core</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-extender -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-extender</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-io -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-io</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-annotation -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-annotation</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-mock -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-mock</artifactId>
				<version>${spring-osgi.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-web -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-web</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-web-extender -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-web-extender</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.osgi/spring-osgi-test -->
			<dependency>
				<groupId>org.springframework.osgi</groupId>
				<artifactId>spring-osgi-test</artifactId>
				<version>${spring-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.hmsonline.storm/storm-osgi -->
			<dependency>
			    <groupId>com.hmsonline.storm</groupId>
			    <artifactId>storm-osgi</artifactId>
			    <version>0.9.0-alpha1</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/com.atomikos/transactions-osgi -->
			<dependency>
			    <groupId>com.atomikos</groupId>
			    <artifactId>transactions-osgi</artifactId>
			    <version>${transactions-osgi.version}</version>
			</dependency>
			
			<!-- https://mvnrepository.com/artifact/org.apache.wink/wink-osgi -->
			<dependency>
			    <groupId>org.apache.wink</groupId>
			    <artifactId>wink-osgi</artifactId>
			    <version>${wink-osgi.version}</version>
			</dependency>
			
		</dependencies>
	</dependencyManagement>
	
	<dependencies>

		<!-- https://mvnrepository.com/artifact/org.osgi/osgi.annotation -->
		<dependency>
		    <groupId>org.osgi</groupId>
		    <artifactId>osgi.annotation</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.osgi/osgi.core -->
		<dependency>
		    <groupId>org.osgi</groupId>
		    <artifactId>osgi.core</artifactId>
		    <scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.osgi/osgi.cmpn -->
		<dependency>
		    <groupId>org.osgi</groupId>
		    <artifactId>osgi.cmpn</artifactId>
		    <scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>osgi-over-slf4j</artifactId>
		</dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-simple</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <scope>test</scope>
		</dependency>
		<dependency>
		    <groupId>com.github.nfalco79</groupId>
		    <artifactId>junit4osgi-bundle</artifactId>
		   	<scope>test</scope>
		</dependency>
		
	</dependencies>
	
	<build>
		<pluginManagement>
			<plugins>
				
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-assembly-plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-appassembler-plugin.version}</version>
					<configuration>
						<!-- get all project dependencies -->
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
					</configuration>
					<executions>
						<execution>
							<id>make-assembly</id>
							<!-- bind to the packaging phase -->
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-compiler-plugin -->
				<plugin>
					<!-- 编译插件：编译主代码至主输出目录 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<!-- 设置源文件编码方式 -->
					<configuration>
						<defaultLibBundleDir>lib</defaultLibBundleDir>
						<!-- 源代码编译版本 -->
						<source>${java.version}</source>
						<!-- 目标平台编译版本 -->
						<target>${java.version}</target>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
						<!-- -->
						<maxmem>512M</maxmem>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.felix/maven-bundle-plugin -->
				<plugin>
				    <groupId>org.apache.felix</groupId>
				    <artifactId>maven-bundle-plugin</artifactId>
				    <version>${maven-bundle-plugin.version}</version>
				    <extensions>true</extensions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
				<plugin>
					<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-enforcer-plugin -->
				<plugin>
					<!-- 环境检查插件：代码编译前的环境监察-->
					<groupId>org.apache.maven.plugins</groupId>
	                <artifactId>maven-enforcer-plugin</artifactId>
	                <version>${maven-enforcer-plugin.version}</version>
	                <executions>
	                    <execution>
	                        <id>default-cli</id>
	                        <goals>
	                            <goal>enforce</goal>
	                        </goals>
	                        <phase>validate</phase>
	                        <configuration>
	                            <rules>
	                            	<requireMavenVersion>
	                            		<message>
	                                        <![CDATA[You are running an older version of Maven. This application requires at least Maven ${maven.version}.]]>
	                                    </message>
										<version>[${maven.version}.0,)</version>
									</requireMavenVersion>
	                                <requireJavaVersion>
	                                    <message>
	                                        <![CDATA[You are running an older version of Java. This application requires at least JDK ${java.version}.]]>
	                                    </message>
	                                    <version>[${java.version}.0,)</version>
	                                </requireJavaVersion>
	                            </rules>
	                        </configuration>
	                    </execution>
	                </executions>
	            </plugin>
	            <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-install-plugin -->
				<plugin>
		            <!-- 安装插件：将项目输出构件安装到本地仓库 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-jar-plugin -->
				<plugin>
		            <!-- jar包生成插件 ：创建项目jar包 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<!-- 打包jar文件时，配置manifest文件，加入lib包的jar依赖 -->
					<configuration>
						<archive>
							<manifest>
								<addClasspath>true</addClasspath>
								<classpathPrefix>lib/</classpathPrefix>
							</manifest>
						</archive>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
				<plugin>
					<!-- 文档插件:发布时自动生成文档 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<aggregate>true</aggregate>
						<charset>${project.build.sourceEncoding}</charset>
						<encoding>${project.build.sourceEncoding}</encoding>
						<docencoding>${project.build.sourceEncoding}</docencoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-resources-plugin -->
				<plugin>
					<!-- 资源插件：复制主资源文件至主输出目录 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<!-- 解决资源文件的编码问题 -->
					<configuration>
						<!-- 字符集编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-source-plugin -->
				<plugin>
					<!-- 源码插件:发布时自动将源码同时发布 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<!-- 打包source文件为jar文件 -->
					<configuration>
						<testFailureIgnore>true</testFailureIgnore>
						<attach>true</attach>
						<encoding>UTF-8</encoding>
					</configuration>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-surefire-plugin -->
				<plugin>
					<!-- 单元测试插件 ：执行测试用例 -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<!-- 跳过单元测试 -->
						<skip>true</skip>
						<skipTests>true</skipTests>
						<!-- forkMode 可设置值有 “never”， “once”， “always” 和 “pertest”。 pretest： 
							每一个测试创建一个新进程，为每个测试创建新的JVM是单独测试的最彻底方式，但也是最慢的，不适合hudson上持续回归。 once：在一个进程中进行所有测试。once为默认设置，在Hudson上持续回归时建议使用默认设置。 
							always：在一个进程中并行的运行脚本，Junit4.7以上版本才可以使用，surefire的版本要在2.6以上提供这个功能，其中 threadCount：执行时，指定可分配的线程数量。只和参数parallel配合使用有效。默认：5。 -->
						<forkMode>once</forkMode>
						<argLine>-Xmx1024M -XX:MetaspaceSize=256M -XX:MaxMetaspaceSize=256M</argLine>
						<additionalClasspathElements>
							<additionalClasspathElement>
								${basedir}/target/test-classes
							</additionalClasspathElement>
						</additionalClasspathElements>
						<includes>
							<include>**/*Test.java</include>
						</includes>
						<excludes>
							<exclude>**/TestBean.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.karaf.tooling/karaf-maven-plugin -->
				<plugin>
				    <groupId>org.apache.karaf.tooling</groupId>
				    <artifactId>karaf-maven-plugin</artifactId>
				    <version>${maven-karaf-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.sonatype.plugins/nexus-staging-maven-plugin -->
				<plugin>
				    <groupId>org.sonatype.plugins</groupId>
				    <artifactId>nexus-staging-maven-plugin</artifactId>
				    <version>${maven-nexus-staging-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-gpg-plugin -->
				<plugin>
					<!-- Gpg Signature -->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${maven-gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- 代码质量检查 -->
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-checkstyle-plugin -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-checkstyle-plugin</artifactId>
				    <version>${maven-checkstyle-plugin.version}</version>
				</plugin>
				<!-- 代码覆盖率 -->
				<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/cobertura-maven-plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${maven-cobertura-plugin.version}</version>
					<configuration>
						<formats>
							<format>html</format>
							<format>xml</format>
						</formats>
						<check>
							<branchRate>85</branchRate>
							<lineRate>85</lineRate>
							<haltOnFailure>true</haltOnFailure>
							<totalBranchRate>85</totalBranchRate>
							<totalLineRate>85</totalLineRate>
							<packageLineRate>85</packageLineRate>
							<packageBranchRate>85</packageBranchRate>
							<regexes>
								<regex>
									<pattern>com.example.reallyimportant.*</pattern>
									<branchRate>90</branchRate>
									<lineRate>80</lineRate>
								</regex>
								<regex>
									<pattern>com.example.boringcode.*</pattern>
									<branchRate>40</branchRate>
									<lineRate>30</lineRate>
								</regex>
							</regexes>
						</check>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>clean</goal>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/codenarc-maven-plugin -->
				<plugin>
				    <groupId>org.codehaus.mojo</groupId>
				    <artifactId>codenarc-maven-plugin</artifactId>
				    <version>${maven-codenarc-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.owasp/dependency-check-maven -->
	            <plugin>
					<!-- 依赖检查：检查是否有依赖有漏洞的第三方包 -->
				    <groupId>org.owasp</groupId>
				    <artifactId>dependency-check-maven</artifactId>
				    <configuration>
                      	<format>HTML</format>
				    	<outputDirectory>${project.build.directory}/dependency-check</outputDirectory>
			 		</configuration>
				    <executions>
				        <execution>
				            <goals>
				                <goal>check</goal>
				            </goals>
				        </execution>
				    </executions>
				</plugin>
				
				<!-- https://mvnrepository.com/artifact/org.codehaus.mojo/findbugs-maven-plugin -->
		        <plugin>
					<!-- 代码检查：检查类或者 JAR 文件 -->
		            <groupId>org.codehaus.mojo</groupId>
		            <artifactId>findbugs-maven-plugin</artifactId>
		            <version>${maven-findbugs-plugin.version}</version>
		            <configuration>
		                <!-- 设置分析工作的等级，可以为Min、Default和Max -->
		                <effort>Low</effort>
		                <!-- Low、Medium和High (Low最严格) -->
		                <threshold>Medium</threshold>
		                <failOnError>true</failOnError>
		                <includeTests>true</includeTests>
		                <!--findbugs需要忽略的错误的配置文件-->
		                <excludeFilterFile>findbugs/findbugs-exclude-filter.xml</excludeFilterFile>
		            </configuration> 
		            <executions>
		                <execution>
		                    <id>run-findbugs</id>
		                    <!-- 在package 阶段触发执行findbugs检查，比如执行 mvn clean package -->
		                    <phase>package</phase>
		                    <goals>
		                        <goal>check</goal>
		                    </goals>
		                </execution>
		            </executions>
		        </plugin>
				<!-- 源码分析  -->
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-pmd-plugin -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-pmd-plugin</artifactId>
				    <version>${maven-pmd-plugin.version}</version>
				</plugin>
				<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-war-plugin -->
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-war-plugin</artifactId>
				    <version>${maven-war-plugin.version}</version>
				</plugin>
								
			</plugins>
		</pluginManagement>
		<plugins>
			<!--环境监察插件：代码编译前的环境监察-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- 编译插件：编译主代码至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<!-- 资源插件：复制主资源文件至主输出目录 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>
			<!-- 单元测试插件 ：执行测试用例 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			<!-- findbugs插件 ：代码检查
	        <plugin>
	            <groupId>org.codehaus.mojo</groupId>
	            <artifactId>findbugs-maven-plugin</artifactId>
            </plugin> -->
            <!-- dependency-check 插件 ：依赖检查 
            <plugin>
			    <groupId>org.owasp</groupId>
			    <artifactId>dependency-check-maven</artifactId>
		    </plugin>-->
			<!-- jar包生成插件 ：创建项目jar包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>
			<!-- 源码插件:发布时自动将源码同时发布 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<!-- 安装插件：将项目输出构件安装到本地仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>
			<!-- 发布插件 ：将项目输出构件部署到远程仓库 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
 
</project>